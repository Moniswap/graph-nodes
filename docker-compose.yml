version: "3.3"
services:
  ipfs:
    container_name: ipfs-service
    build:
      context: ./ipfs
      dockerfile: Dockerfile
    networks:
      - graph
    volumes:
      - ipfsdatarec:/home
  postgres:
    container_name: db
    image: postgres
    networks:
      - graph
    command:
      [
        "postgres",
        "-cmax_connections=1000",
        "-cshared_preload_libraries=pg_stat_statements",
      ]
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      - postgresqldata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=base_graph_db,base_mainnet_graph_db
  base-goerli:
    container_name: base_graph
    image: graphprotocol/graph-node
    depends_on:
      - ipfs
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      postgres_host: postgres
      postgres_user: postgres
      postgres_pass: postgres
      postgres_db: base_graph_db
      ipfs: ipfs:5001
      ethereum: "goerli:https://goerli.base.org"
      GRAPH_LOG: info
      ETHEREUM_POLLING_INTERVAL: 1000
    networks:
      - graph
  base:
    container_name: base_graph_mainnet
    image: graphprotocol/graph-node
    depends_on:
      - ipfs
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      postgres_host: postgres
      postgres_user: postgres
      postgres_pass: postgres
      postgres_db: base_mainnet_graph_db
      ipfs: ipfs:5001
      ethereum: "mainnet:https://base.gateway.tenderly.co"
      GRAPH_LOG: info
      ETHEREUM_POLLING_INTERVAL: 1000
    networks:
      - graph
  proxy:
    container_name: graph_nodes_proxy
    networks:
      - graph
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - 65000:80
    depends_on:
      - base-goerli
      - base
networks:
  graph:
    external: false
volumes:
  postgresqldata:
    external: false
  ipfsdatarec:
    external: false
